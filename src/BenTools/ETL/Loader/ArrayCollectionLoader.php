<?php
/**
 * ArrayCollectionLoader.php
 * Generated by PhpStorm - 02/2016
 * Project bentools-etl
 * @author Beno!t POLASZEK
 **/

namespace BenTools\ETL\Loader;

use BenTools\ETL\Interfaces\ContextInterface;
use BenTools\ETL\Interfaces\LoaderInterface;
use Doctrine\Common\Collections\ArrayCollection;

class ArrayCollectionLoader implements LoaderInterface {

    /**
     * @var ArrayCollection
     */
    private $collection;

    /**
     * @var callable
     */
    private $keyFn;

    /**
     * ArrayCollectionLoader constructor.
     * @param ArrayCollection|null $collection
     * @param callable|null $keyFn
     */
    public function __construct(ArrayCollection $collection = null, callable $keyFn = null) {
        $this->collection = is_null($collection) ? new ArrayCollection() : $collection;
        $this->keyFn      = $keyFn;
    }

    /**
     * @inheritDoc
     */
    public function load($data, ContextInterface $context) {
        if (is_callable($this->keyFn)) {
            $key = call_user_func($this->keyFn, $data);
            $this->collection[$key] = $data;
        }
        else {
            $this->collection[] = $data;
        }
    }

    /**
     * @inheritDoc
     */
    public function flush(ContextInterface $context) {

    }

    /**
     * @inheritDoc
     */
    public function clear(ContextInterface $context) {
        $this->collection->clear();
    }

}